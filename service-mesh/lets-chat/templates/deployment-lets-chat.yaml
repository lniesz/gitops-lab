kind: Deployment
apiVersion: apps/v1
metadata:
  annotations:
    alpha.image.policy.openshift.io/resolve-names: '*'
    app.openshift.io/vcs-ref: master
    app.openshift.io/vcs-uri: 'https://github.com/lniesz/lets-chat.git'
    deployment.kubernetes.io/revision: '91'
    image.openshift.io/triggers: >-
      [{"from":{"kind":"ImageStreamTag","name":"lets-chat:latest","namespace":"lets-chat"},"fieldPath":"spec.template.spec.containers[?(@.name==\"lets-chat\")].image","pause":"false"}]
    openshift.io/generated-by: OpenShiftWebConsole
  name: lets-chat
  labels:
    app: lets-chat
    app.kubernetes.io/component: lets-chat
    app.kubernetes.io/instance: lets-chat
    app.kubernetes.io/name: nodejs
    app.kubernetes.io/part-of: lets-chat-app
    app.openshift.io/runtime: nodejs
    app.openshift.io/runtime-version: '12'
    page: main
spec:
  replicas: 1
  selector:
    matchLabels:
      app: lets-chat
  template:
    metadata:
      annotations:
        sidecar.istio.io/inject: "true"
      labels:
        app: lets-chat
        deploymentconfig: lets-chat
        page: main
    spec:
      containers:
        - name: lets-chat
          image: >-
            image-registry.openshift-image-registry.svc:5000/lets-chat/lets-chat:latest
          ports:
            - containerPort: 8080
              protocol: TCP
          resources: {}
          terminationMessagePath: /dev/termination-log
          terminationMessagePolicy: File
          imagePullPolicy: Always
      restartPolicy: Always
      terminationGracePeriodSeconds: 30
      dnsPolicy: ClusterFirst
      securityContext: {}
      schedulerName: default-scheduler
  strategy:
    type: RollingUpdate
    rollingUpdate:
      maxUnavailable: 25%
      maxSurge: 25%
  revisionHistoryLimit: 10
  progressDeadlineSeconds: 600
